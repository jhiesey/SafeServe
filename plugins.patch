Only in plugins-1.5.1.4-new/: config.h
Only in plugins-1.5.1.4-new/: config.log
Only in plugins-1.5.1.4-new/: config.mk
Only in plugins-1.5.1.4-new/: config.status
Only in plugins-1.5.1.4-new/: dist
Only in plugins-1.5.1.4-new/docs: hs-plugins.aux
Only in plugins-1.5.1.4-new/docs: hs-plugins.fdb_latexmk
Only in plugins-1.5.1.4-new/docs: hs-plugins.log
Only in plugins-1.5.1.4-new/docs: hs-plugins.pdf
Only in plugins-1.5.1.4-new/docs: hs-plugins.synctex.gz
Only in plugins-1.5.1.4-new/docs: hs-plugins.toc
diff -ru plugins-1.5.1.4/src/System/Plugins/Load.hs plugins-1.5.1.4-new/src/System/Plugins/Load.hs
--- plugins-1.5.1.4/src/System/Plugins/Load.hs	2010-10-18 11:13:03.000000000 -0700
+++ plugins-1.5.1.4-new/src/System/Plugins/Load.hs	2011-12-13 01:12:34.000000000 -0800
@@ -84,7 +84,7 @@
 import System.Directory         ( doesFileExist, removeFile )
 import Foreign.C.String         ( CString, withCString, peekCString )
 
-import GHC                      ( defaultCallbacks )
+-- import GHC                      ( defaultCallbacks )
 import GHC.Ptr                  ( Ptr(..), nullPtr )
 import GHC.Exts                 ( addrToHValue# )
 import GHC.Prim                 ( unsafeCoerce# )
@@ -99,7 +99,8 @@
 readBinIface' :: FilePath -> IO ModIface
 readBinIface' hi_path = do
     -- kludgy as hell
-    e <- newHscEnv defaultCallbacks undefined
+    -- e <- newHscEnv defaultCallbacks undefined
+    e <- newHscEnv undefined
     initTcRnIf 'r' e undefined undefined (readBinIface IgnoreHiWay QuietBinIFaceReading hi_path)
 
 -- TODO need a loadPackage p package.conf :: IO () primitive
@@ -281,7 +282,8 @@
 
         hWrite hdl src
 
-        e <- build tmpf tmpf1 (i:is++args++["-fno-code","-ohi "++tmpf1])
+        -- e <- build tmpf tmpf1 (i:is++args++["-fno-code","-ohi "++tmpf1])
+        e <- build tmpf tmpf1 (i:is++args++["-fno-code"]) -- ,"-ohi "++tmpf1])
         mapM_ removeFile [tmpf,tmpf1]
         return e
 
@@ -678,7 +680,7 @@
                 let mods'' = nubBy (\v u -> fst v == fst u)  mods'
 
                 -- and find some packages to load, as well.
-                let ps = dep_pkgs ds
+                let ps = map fst $ dep_pkgs ds
                 ps' <- filterM loaded . map packageIdString . nub $ ps
 
 #if DEBUG
Only in plugins-1.5.1.4-new/testsuite/makewith/io: TestIO.conf
Only in plugins-1.5.1.4-new/testsuite/makewith/unsafeio: Unsafe.conf
Only in plugins-1.5.1.4-new/testsuite/pdynload/small: Plugin.hi
Only in plugins-1.5.1.4-new/testsuite/pdynload/small: Plugin.o
Only in plugins-1.5.1.4-new/testsuite/pdynload/small/api: API.hi
Only in plugins-1.5.1.4-new/testsuite/pdynload/small/api: API.o
